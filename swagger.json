{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog CMS CRUD Restful API using Sequelize and Swagger",
    "description": "Blog CMS CRUD Restful API with authentication and authorization. Using PostgreSQL as DBMS and Sequelize as its ORM. Documentation is served using Swagger.",
    "contact": {
      "name": "Doni Rahma Tiana",
      "email": "donirahmatiana@gmail.com"
    },
    "license": {
      "name": "ISC",
      "url": "https://opensource.org/licenses/ISC"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://intense-brushlands-12885.herokuapp.com/",
      "description": "Production server"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/auth/signup": {
      "post": {
        "tags": ["AUTH"],
        "summary": "Signup",
        "description": "Register account",
        "operationId": "Signup",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              },
              "example": {
                "name": "doni",
                "username": "doni",
                "email": "doni@gmail.com",
                "password": "12345678",
                "passwordConfirmation": "12345678"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Account successfully registered"
          },
          "400": {
            "description": "Bad input or duplicate account found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": ["AUTH"],
        "summary": "Signin",
        "description": "Login account",
        "operationId": "Signin",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              },
              "example": {
                "username": "admin",
                "password": "12345678"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Login success"
          },
          "400": {
            "description": "Bad input"
          },
          "401": {
            "description": "Wrong password"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/auth/forgot-password": {
      "get": {
        "tags": ["AUTH"],
        "summary": "Forgot password page",
        "description": "Forgot password page",
        "operationId": "ForgotPasswordPage",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Forgot password page retrieved"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["AUTH"],
        "summary": "Forgot password",
        "description": "Generating reset password url",
        "operationId": "ForgotPassword",
        "parameters": [
          {
            "in": "header",
            "name": "CSRF-Token",
            "schema": {
              "type": "string"
            },
            "description": "csrf token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              },
              "example": {
                "email": "donirahmatiana@gmail.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Forgot password page retrieved"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/auth/reset-password": {
      "get": {
        "tags": ["AUTH"],
        "summary": "Reset password page",
        "description": "Reset password page",
        "operationId": "ResetPasswordPage",
        "parameters": [
          {
            "in": "query",
            "name": "resetPasswordToken",
            "schema": {
              "type": "string"
            },
            "description": "user's reset password token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Reset password page retrieved"
          },
          "400": {
            "description": "Password reset token is invalid or has expired"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Password confirmation does not match"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["AUTH"],
        "summary": "Reset password",
        "description": "Reset password",
        "operationId": "ResetPassword",
        "parameters": [
          {
            "in": "header",
            "name": "CSRF-Token",
            "schema": {
              "type": "string"
            },
            "description": "csrf token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              },
              "example": {
                "newPassword": "123456789",
                "verifyPassword": "123456789",
                "resetPasswordToken": "e37d626e8397dda4b6b0cf59f493900dd5530899"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password successfully updated"
          },
          "400": {
            "description": "Password reset token is invalid or has expired"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "Password confirmation does not match"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/articles": {
      "get": {
        "tags": ["ARTICLES"],
        "summary": "Read Articles",
        "description": "Get all articles",
        "operationId": "ReadArticles",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Get articles success"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["ARTICLES"],
        "summary": "Create Article",
        "description": "Create article",
        "operationId": "CreateArticle",
        "parameters": [],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArticleRequest"
              },
              "example": {
                "title": "Article Title",
                "content": "Article content"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Article created"
          },
          "400": {
            "description": "Bad input"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/articles/{article_id}": {
      "get": {
        "tags": ["ARTICLES"],
        "summary": "Read Article",
        "description": "Get article by id",
        "operationId": "ReadArticle",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get article success"
          },
          "400": {
            "description": "Param article_id is not exists"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["ARTICLES"],
        "summary": "Update Article",
        "description": "Update article by article id",
        "operationId": "UpdateArticle",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArticleRequest"
              },
              "example": {
                "title": "Updated Article Title",
                "content": "Updated article content"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Article updated"
          },
          "400": {
            "description": "Bad input or param article_id not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not article owner"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ARTICLES"],
        "summary": "Delete Article",
        "description": "Delete article by id",
        "operationId": "DeleteArticle",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Article deleted"
          },
          "400": {
            "description": "Param article_id is not exists"
          },
          "403": {
            "description": "No token provided or not article owner"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/users": {
      "get": {
        "tags": ["USER"],
        "summary": "Read Profile",
        "description": "Get current user detail",
        "operationId": "ReadProfile",
        "parameters": [],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get profile success"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["USER"],
        "summary": "Edit Profile",
        "description": "Update user profile",
        "operationId": "EditProfile",
        "parameters": [],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "updated"
                  },
                  "username": {
                    "type": "string",
                    "example": "updated"
                  },
                  "email": {
                    "type": "string",
                    "example": "updated@gmail.com"
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "400": {
            "description": "Bad input or duplicate account found"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/users/{user_id}/articles": {
      "get": {
        "tags": ["USER ARTICLE"],
        "summary": "Read User Articles",
        "description": "Get current user articles",
        "operationId": "ReadUserArticles",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user articles success"
          },
          "400": {
            "description": "Param user_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/users/{user_id}/comments": {
      "get": {
        "tags": ["USER COMMENT"],
        "summary": "Read User Comments",
        "description": "Get current user comments",
        "operationId": "ReadUserComments",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user comments success"
          },
          "400": {
            "description": "Param user_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided, not an user, or not profile owner"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/users/comments/{article_id}": {
      "post": {
        "tags": ["USER COMMENT"],
        "summary": "Create Coment",
        "description": "Create a comment",
        "operationId": "CreateComent",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateComentRequest"
              },
              "example": {
                "content": "pertamax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Comment created"
          },
          "400": {
            "description": "Bad input or param article_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/users/comments/{comment_id}": {
      "delete": {
        "tags": ["USER COMMENT"],
        "summary": "Delete Comment",
        "description": "Delete a comment",
        "operationId": "DeleteComment",
        "parameters": [
          {
            "in": "path",
            "name": "comment_id",
            "required": true,
            "description": "comment id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted"
          },
          "400": {
            "description": "Param comment_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided, not an user, or not comment owner"
          },
          "404": {
            "description": "Comment not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/articles/{article_id}/comments": {
      "get": {
        "tags": ["COMMENT"],
        "summary": "Read Comments",
        "description": "Get comments by article id",
        "operationId": "ReadComments",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get comments of an user article success"
          },
          "400": {
            "description": "Param article_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an user"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/users": {
      "get": {
        "tags": ["ADMIN USER"],
        "summary": "Read Users",
        "description": "Admin get all user",
        "operationId": "ReadUsers",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get users success"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": ["ADMIN USER"],
        "summary": "Create User",
        "description": "Admin create new user",
        "operationId": "CreateUser",
        "parameters": [],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "name": "Doni created",
                "username": "DoniCreated",
                "email": "doniCreated@gmail.com",
                "password": "12345678"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad input or duplicate account found"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/users/{user_id}": {
      "get": {
        "tags": ["ADMIN USER"],
        "summary": "Read User",
        "description": "Admin get user by Id",
        "operationId": "ReadUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get user success"
          },
          "400": {
            "description": "Param user_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": ["ADMIN USER"],
        "summary": "Update User",
        "description": "Admin update user",
        "operationId": "UpdateUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "name": "User updated",
                "username": "UserUpdated",
                "email": "userUpdated@gmail.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "400": {
            "description": "Bad input, ing to modify superadmining to modify superadmin account, or duplicate account found"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ADMIN USER"],
        "summary": "Delete User",
        "description": "Admin delete user",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "required": true,
            "description": "user id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "400": {
            "description": "Bad input, param user_id is not exists, or intending to modify superadmin"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/articles": {
      "get": {
        "tags": ["ADMIN ARTICLES"],
        "summary": "Read Articles",
        "description": "Admin get all articles",
        "operationId": "GetReadArticles",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get articles success"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/articles/{article_id}": {
      "get": {
        "tags": ["ADMIN ARTICLES"],
        "summary": "Read Article",
        "description": "Admin get article by id",
        "operationId": "GetReadArticle",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get article success"
          },
          "400": {
            "description": "Param article_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": ["ADMIN ARTICLES"],
        "summary": "Delete article",
        "description": "Admin delete article by id",
        "operationId": "Deletearticle",
        "parameters": [
          {
            "in": "path",
            "name": "article_id",
            "required": true,
            "description": "article id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Article deleted"
          },
          "400": {
            "description": "Param article_id is not exists"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "Article not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/comments": {
      "get": {
        "tags": ["ADMIN COMMENT"],
        "summary": "Read Comments",
        "description": "Admin get comments",
        "operationId": "GetReadComments",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "page number of data",
            "required": false
          },
          {
            "in": "query",
            "name": "paginate",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 20
            },
            "description": "total maximum data per page",
            "required": false
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get comments success"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    },
    "/api/admin/comments/{comment_id}": {
      "delete": {
        "tags": ["ADMIN COMMENT"],
        "summary": "Delete Comment",
        "description": "Admin delete comments by comment id\n",
        "operationId": "DeleteComment1",
        "parameters": [
          {
            "in": "path",
            "name": "comment_id",
            "required": true,
            "description": "comment id",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "security": [
          {
            "httpBearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get comments success"
          },
          "401": {
            "description": "Authentication failed"
          },
          "403": {
            "description": "No token provided or not an admin"
          },
          "404": {
            "description": "Comment not found"
          },
          "500": {
            "description": "Server error"
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "SignupRequest": {
        "title": "SignupRequest",
        "required": [
          "name",
          "username",
          "email",
          "password",
          "passwordConfirmation"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordConfirmation": {
            "type": "string"
          }
        },
        "example": {
          "name": "doni",
          "username": "doni",
          "email": "doni@gmail.com",
          "password": "12345678",
          "passwordConfirmation": "12345678"
        }
      },
      "SigninRequest": {
        "title": "SigninRequest",
        "required": ["username", "password"],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "admin",
          "password": "12345678"
        }
      },
      "CreateArticleRequest": {
        "title": "CreateArticleRequest",
        "required": ["title", "content"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "example": {
          "title": "Article Title",
          "content": "Article content"
        }
      },
      "UpdateArticleRequest": {
        "title": "UpdateArticleRequest",
        "required": [],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "example": {
          "title": "Updated Article Title",
          "content": "Updated article content"
        }
      },
      "CreateComentRequest": {
        "title": "CreateComentRequest",
        "required": ["content"],
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "example": {
          "content": "pertamax"
        }
      },
      "CreateUserRequest": {
        "title": "CreateUserRequest",
        "required": ["name", "username", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "name": "Doni created",
          "username": "DoniCreated",
          "email": "doniCreated@gmail.com",
          "password": "12345678"
        }
      },
      "UpdateUserRequest": {
        "title": "UpdateUserRequest",
        "required": [],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "example": {
          "name": "User updated",
          "username": "UserUpdated",
          "email": "userUpdated@gmail.com"
        }
      },
      "ForgotPasswordRequest": {
        "title": "ForgotPasswordRequest",
        "required": [],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "donirahmatiana@gmail.com"
        }
      },
      "ResetPasswordRequest": {
        "title": "ResetPasswordRequest",
        "required": [],
        "type": "object",
        "properties": {
          "email": {
            "newPassword": "string",
            "verifyPassword": "string",
            "resetPasswordToken": "string"
          }
        },
        "example": {
          "newPassword": "123456789",
          "verifyPassword": "123456789",
          "resetPasswordToken": "e37d626e8397dda4b6b0cf59f493900dd5530899"
        }
      }
    },
    "securitySchemes": {
      "httpBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "AUTH",
      "description": "authentication"
    },
    {
      "name": "ARTICLES",
      "description": "Article functionality"
    },
    {
      "name": "USER",
      "description": "User functionality"
    },
    {
      "name": "USER ARTICLE",
      "description": "Article functionality within the scope of the user role"
    },
    {
      "name": "USER COMMENT",
      "description": "Comment functionality within the scope of the user role"
    },
    {
      "name": "COMMENT",
      "description": "Comment functionality"
    },
    {
      "name": "ADMIN USER",
      "description": "user functionality within the scope of the admin role"
    },
    {
      "name": "ADMIN ARTICLES",
      "description": "article functionality within the scope of the admin role"
    },
    {
      "name": "ADMIN COMMENT",
      "description": "comment functionality within the scope of the admin role"
    }
  ]
}
